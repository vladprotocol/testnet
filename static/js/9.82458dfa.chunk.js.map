{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","hooks/useApprove.ts","hooks/useBlock.ts","utils/callHelpers.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","components/UnlockButton.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","config/constants/index.ts","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useUnstake.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useERC20","erc20","useCake","getCakeAddress","useRabbitMintingFarm","nftFarm","usePancakeRabbits","nft","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","useApprove","lpContract","dispatch","useDispatch","account","masterChefContract","onApprove","useCallback","a","approve","tx","fetchFarmUserDataAsync","useSousApprove","sousChefContract","updateUserAllowance","useNftApprove","tokenContract","spenderAddress","methods","ethers","constants","MaxUint256","send","from","useBlock","BlockContext","options","stake","pid","amount","deposit","times","toString","on","transactionHash","sousStake","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","StyledSpacer","styled","div","props","size","Spacer","s","spacing","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","useHarvest","farmPid","onReward","txHash","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useSousHarvest","isUsingBnb","handleHarvest","updateUserPendingReward","updateUserBalance","UnlockButton","TranslateString","connect","reset","onPresentConnectModal","useWalletModal","onClick","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","farmsConfig","filter","farm","isCommunity","tokenSymbol","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","info","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","SYRUPIDS","useSousUnstake","isOldSyrup","onUnstake","useUnstake","StyledLabel","isFinished","Label","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","CardTitle","Card","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","role","aria-label","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","textSubtle","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","f","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","mb","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/9.82458dfa.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport nftFarm from 'config/abi/NftFarm.json'\nimport nft from 'config/abi/NFT.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const nftMintingFarmAbi = (nftFarm as unknown) as AbiItem\n  return useContract(nftMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const nftAbi = (nft as unknown) as AbiItem\n  return useContract(nftAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n// Approve an NFT\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'STOS Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake CAKE to earn new tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"STOS POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}